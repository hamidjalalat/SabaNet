@using NGAccountHolder;
@using NGSmart.WebBlazor.Ecare.Models;
@using static NGSmart.WebBlazor.Ecare.Shared.QuickMenu;

@inherits LayoutComponentBase

@inject CreditService CreditService
@inject AccountListService AccountListService
@inject NavigationManager navigationManager
@inject AccountHolder AccountHolder
@inject UserInfoSingleton UserInfo

<style>
    .dropdownaccount {
        width: 200px;
        margin-right: 2px;
    }
</style>
<div class="page">
    <div class="@SidebarToggle" @onmouseover="MouseIn" @onmouseout="MouseOut">
        <NavMenu IsHidden="@MainHidden" />
    </div>
    <main>
        <nav style="border-bottom:solid 1px #e9ecef" class="navbar navbar-expand navbar-light bg-light">
            <div class="col-10">
                <div class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle  dropdownaccount" type="button" id="dropdownMenu2" data-bs-toggle="dropdown" aria-expanded="false">
                        انتخاب اشتراک
                    </button>
                    <ul style="background-color:#5c636a;width:200px;margin-right:2px" class="dropdown-menu" aria-labelledby="dropdownMenu2">
                        @foreach (var item in AccList)
                        {
                            <li>
                                <button @onclick="()=>ChangeAccount(item.accAccountID,item.accAccountName,item.accAccountTypeID)" style="color:white;display:inline" class="dropdown-item btn-sm" type="button">
                                    @switch (item.accStatusID)
                                    {
                                        case 37:
                                            {
                                                <span style="background-color:green;border-radius:3px">@item.Status</span>
                                                break;
                                            }
                                        case 38:
                                            {
                                                <span style="background-color:gray;border-radius:3px">@item.Status</span>
                                                break;
                                            }
                                        case 6117:
                                            {
                                                <span style="background-color:tan;border-radius:3px">@item.Status</span>
                                                break;
                                            }
                                        default:
                                            {
                                                <span>@item.Status</span>
                                                break;
                                            }

                                    }
                                    &nbsp;&nbsp;
                                    @(item.accAccountName)
                                </button>
                            </li>
                        }
                    </ul>
                    &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;
                    <span>
                        <b>  نام حساب</b>:@UserInfo.AccountName
                    </span>
                </div>
            </div>
            <div class="col-2">
                <div>
                    <div class="collapse navbar-collapse" id="navbarSupportedContent">
                        <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                            <li class="nav-item dropdown">
                                <a @onclick="GetQuickMenuTask" class="nav-link dropdown-toggle navbar-brand" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="navbar-toggler-icon"></span>
                                </a>
                                <ul class="dropdown-menu" aria-labelledby="navbarDropdown">
                                    <div>
                                        <QuickMenu @ref=QuickMenuRef AccountID=@AccountId />
                                    </div>
                                </ul>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle navbar-brand" href="#" id="navbarDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                    <span class="navbar-toggler-icon"></span>
                                </a>
                                <ul class="dropdown-menu" style="margin-right:-200px" aria-labelledby="navbarDropdown">
                                    <div>
                                        <QuickMenu2 />
                                    </div>
                                </ul>
                            </li>
                        </ul>
                    </div>
                </div>
            </div>
        </nav>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    public int Credit;

    public CreditByPartyRoleIdResponse _CreditByPartyRoleIdResponse = new CreditByPartyRoleIdResponse();
    public List<AccList> AccList = new List<AccList>();

    public string PartyRoleId = "";
    public string AccountId = "";
    public string SidebarToggle = "sidebar";
    private string MainHidden;

    protected override async Task OnInitializedAsync()
    {
        AccountId = await AccountHolder.GetValueAsync<string>("accAccountID");
        PartyRoleId = await AccountHolder.GetValueAsync<string>("accPartyRoleID");
        UserInfo.AccountName = await AccountHolder.GetValueAsync<string>("accAccountName");

        var result = await CreditService.GetAsyncByPartyRoleId(PartyRoleId);
        var resultAccountlist = await AccountListService.GetAsyncByPartyRoleId(PartyRoleId);
        AccList = resultAccountlist.accList.OrderBy(C => C.accStatusID).ToList();

        MainHidden = "IsHidden";
        Credit = result.Credit;
    }

    private QuickMenu QuickMenuRef;
    private void GetQuickMenuTask() => QuickMenuRef.GetTask();

    public void MouseIn(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        SidebarToggle = "sidebarFixed";
        MainHidden = "";
    }
    public void MouseOut(Microsoft.AspNetCore.Components.Web.MouseEventArgs args)
    {
        SidebarToggle = "sidebar";
        MainHidden = "IsHidden";
    }
    public async Task ChangeAccount(int accAccountID, string accAccountName, int accAccountTypeID)
    {
        await AccountHolder.SetValueAsync("accAccountID", accAccountID.ToString());
        await AccountHolder.SetValueAsync("accAccountName", accAccountName);
        await AccountHolder.SetValueAsync("accAccountTypeID", accAccountTypeID);

        if (accAccountTypeID == 6896)
        {
            navigationManager.NavigateTo(uri: "/PanelVoip", forceLoad: true);
        }
        else
        {
            navigationManager.NavigateTo(uri: "/index", forceLoad: true);
        }
    }
}
